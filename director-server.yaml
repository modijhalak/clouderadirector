---
- name: Create Cloudera Director instance
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Launch instance for cloudera director
      ec2:
         key_name: "{{ lookup('ini', 'key_name section=director file=cloudera.ini') }}"
         group_id: "{{ lookup('ini', 'security_group section=director file=cloudera.ini') }}"
         instance_type: "{{ lookup('ini', 'instance_type section=director  file=cloudera.ini') }}"
         image: "{{ lookup('ini', 'image section=director file=cloudera.ini') }}"
         wait: true
         wait_timeout: 600
         region: "{{ lookup('ini', 'region  section=director file=cloudera.ini') }}"
         vpc_subnet_id: "{{ lookup('ini', 'vpc_subnet_id  section=director file=cloudera.ini') }}"
         assign_public_ip: false
         instance_profile_name: "{{ lookup('ini', 'instance_profile_name  section=director file=cloudera.ini') }}"
         exact_count: "{{ lookup('ini', 'instance_count  section=director file=cloudera.ini') }}"
         count_tag:
           Name: "Director_{{ lookup('ini', 'instance_count  section=director file=cloudera.ini') }}"
         instance_tags:
           Name: "Cloudera Director"
      register: ec2_hosts
      
    - name: Set default on EC2 Instance
      set_fact:
        ec2_host_instance: "{{ ec2_hosts.tagged_instances[0] }}"
    - name: Set default facts on EC2 Instance
      set_fact:
        ec2_host_instance_ip: "{{ ec2_host_instance.private_ip }}"
        ec2_host_instance_id: "{{ ec2_host_instance.id }}"
    - name: Add new instance to host group
      add_host:
        hostname: "{{ ec2_host_instance_ip }}"
        groupname: director1
    
    - name: Wait for instance to comeup
      wait_for:
        host: "{{ ec2_host_instance.private_ip }}"
        state: started
        port: 22
  
- name: Cloudera Director pre configurations setup
  hosts: director1
  remote_user: "{{ lookup('ini', 'ec2_remote_user  section=director file=cloudera.ini') }}"
  become: yes
  become_method: sudo
  gather_facts: no 
  tasks:
    - name: Install Oracle JDK
      shell: yum localinstall -y https://s3-ap-southeast-1.amazonaws.com/dbs-amp-test/jdk-8u141-linux-x64.rpm
    
    - name: Install MariaDB/Mysql
      shell: yum install -y mariadb
      
    - name: copy database.txt
      copy:
        src: database.txt
        dest: /tmp/
        mode: 755
      
    - name: copy DB
      copy:
        src: mariadb.sh
        dest: /tmp/mariadb.sh
        mode: 755
    
    - name: run script
      shell: sh /tmp/mariadb.sh
      
    - name: Download Director Client
      command: sudo wget http://archive.cloudera.com/director/redhat/7/x86_64/director/2.5.0/RPMS/x86_64/cloudera-director-client-2.5.0-1.director250.p0.21.el7.x86_64.rpm
    
    - name: Download DirectorPlugins
      command: sudo wget http://archive.cloudera.com/director/redhat/7/x86_64/director/2.5.0/RPMS/x86_64/cloudera-director-plugins-2.5.0-1.director250.p0.21.el7.x86_64.rpm
    
    - name: Download Director Server 
      command: sudo wget http://archive.cloudera.com/director/redhat/7/x86_64/director/2.5.0/RPMS/x86_64/cloudera-director-server-2.5.0-1.director250.p0.21.el7.x86_64.rpm
   
    - name: Install Director Plugins
      command: sudo yum localinstall cloudera-director-plugins-2.5.0-1.director250.p0.21.el7.x86_64.rpm -y 
   
    - name: Install Director Server 
      command: sudo yum localinstall cloudera-director-server-2.5.0-1.director250.p0.21.el7.x86_64.rpm -y
    
    - name: Install Director Server Clinet 
      command: sudo yum localinstall cloudera-director-client-2.5.0-1.director250.p0.21.el7.x86_64.rpm -y 
      
    - name: Start Director Server
      command: sudo systemctl start cloudera-director-server
    
    - name : Enable Director Service 
      command: sudo systemctl enable cloudera-director-server
    
    - debug:
        msg: " File name is {{ conf_name }} "
    
    - name: Copy Conf File      
      copy: src=/home/ec2-user/cluster/{{conf_name}}.j2 dest=/tmp/{{conf_name}}
  
    - name: Copy Kogentix Key pair 
      copy: 
        src: "/home/ec2-user/cluster/Cluster.pem"
        dest: "/tmp/"
        mode: 600
   
    - name : Copy bootstrap file
      copy : 
        src: "bootstrap-scripts.sh" 
        dest: "/tmp/" 
        mode: "0775"
      
    - name: Run Conf file for Cluster
      command: sudo cloudera-director bootstrap /tmp/{{conf_name}}
      
    - name: Cluster Status
      command: sudo cloudera-director status /tmp/{{conf_name}}
      
